#!/bin/bash
set -e

# Paths
CONFIG_DIR="$HOME/.config/dotfiles"
DOTFILES_DIR="$HOME/.dotfiles"

dev=0

# Install Ansible
if ! [ -x "$(command -v ansible)" ]; then
  sudo apt-add-repository -y ppa:ansible/ansible
  sudo apt-get update -y
  sudo apt-get install -y curl git software-properties-common ansible
fi

# Clone repository
if ! [[ -d "$DOTFILES_DIR" ]]; then
  git clone "https://github.com/danielmichaels/my-ansible.git" "$DOTFILES_DIR"
else
  git -C "$DOTFILES_DIR" pull
fi

# Update Galaxy
ansible-galaxy install -r requirements.yml >/dev/null 2>&1

# Run playbook

function run_dev() {
  if [[ -f "local/vault-password.txt" ]]; then
    ansible-playbook --diff --extra-vars "@local/values.yml" --become-password-file "local/become.txt" --vault-password-file "local/vault-password.txt" "local/main.yml" "$@"
  else
    ansible-playbook --diff --extra-vars "@local/values.yml" "local/main.yaml" "$@"
  fi
}

function run() {
  cd "$DOTFILES_DIR"
  if [[ -f "$DOTFILES_DIR/local/vault-password.txt" ]]; then
    ansible-playbook --diff --extra-vars "@$CONFIG_DIR/values.yml" --become-password-file "$CONFIG_DIR/become.txt" --vault-password-file "$CONFIG_DIR/vault-password.txt" "$DOTFILES_DIR/local/main.yml" "$@"
  else
    ansible-playbook --diff --extra-vars "@$CONFIG_DIR/values.yml" "$DOTFILES_DIR/local/main.yml" "$@"
  fi
}

function printer() {
  printf "\n%s\n\n" "[!] dotfiles [!]"
  if [ "$dev" = 1 ]; then
    printf "\n%s\n" "[*] RUNNING IN DEV MODE [*]"
  fi
  echo "updating..."
}

function flags() {
  while test $# -gt 0; do
    case "${1}" in
    --dev)
      shift
      export dev=1
      printer
      run_dev "$@"
      shift
      ;;
    live)
      export dev=0
      printer
      run "$@"
      ;;
    esac
  done
}

# default to `live` so we trigger live run automatically
flags "${@:-live}"
